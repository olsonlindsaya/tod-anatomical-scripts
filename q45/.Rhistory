cat("\n")
lm2 <- lm(lh_parsorbitalis_CT ~  dxCoded + V1.Age, data=CT_data_q4, na.action = na.exclude)
cat(tab_model(lm2, pred.labels = c("Intercept", "Dx", "Age"),
dv.labels = paste(outcomeVars[[5]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
ggplot(CT_data_q4, aes(x=Dx, y=lh_parsorbitalis_CT, color=Dx)) +
geom_boxplot() +
theme(text = element_text(size = 20)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('LH Pars Orbitalis CT') +
xlab('Diagnosis') +
theme_classic()
lm2 <- lm(lh_parsorbitalis_CT ~  dxCoded + V1.Age, data=CT_data_q4, na.action = na.exclude)
rm(lm2)
lm2 <- lm(lh_parsorbitalis_CT ~  dxCoded + V1.Age, data=CT_data_q4, na.action = na.exclude)
summary(lm2)
outcomeVars[[5]]
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- CT_data_q4[,c(18:32)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ CT_data_q4$sexCoded + CT_data_q4$V1.Age + CT_data_q4$sexCoded)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
outcomeVars[[13]]
rm(outcomes)
set.seed(1)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- CT_data_q3[,c(18:32)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ CT_data_q3$sexCoded +CT_data_q3$V1.Age)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ CT_data_q3$sexCoded +CT_data_q3$V1.Age +CT_data_q3$dxCoded)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
outcomeVars[[14]]
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- CT_data_q4[,c(18:32)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ CT_data_q4$dxCoded + CT_data_q4$V1.Age + CT_data_q4$sexCoded)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- CT_data_q4[,c(18:32)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ CT_data_q4$dxCoded + CT_data_q4$V1.Age + CT_data_q4$sexCoded)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
outcomveVars[[14]]
outcomeVars[[14]]
rm(outcomes)
set.seed(1)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- CT_data_q3[,c(18:32)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ CT_data_q3$sexCoded +CT_data_q3$V1.Age +CT_data_q3$dxCoded)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
names(CT_data_q3)
ggplot(CT_data_q4, aes(x=sexCoded, y=rh_parstriangularis_CT, color=SEX)) +
geom_boxplot() +
theme(text = element_text(size = 20)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('RH Pars Triangularis CT') +
xlab('Sex/Gender') +
theme_classic()
rm(outcomes)
outcomes <- CT_data_q4[,c(18:32)]
outcomeVars = names(outcomes)
cat("\n")
cat("\n")
cat("\n")
cat("\n")
lm2 <- lm(rh_parstriangularis_CT ~  sexCoded + V1.Age +dxCoded, data=CT_data_q4, na.action = na.exclude)
cat(tab_model(lm2, pred.labels = c("Intercept", "Dx", "Age"),
dv.labels = paste(outcomeVars[[14]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
ggplot(CT_data_q4, aes(x=sexCoded, y=rh_parstriangularis_CT, color=SEX)) +
geom_boxplot() +
theme(text = element_text(size = 20)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('RH Pars Triangularis CT') +
xlab('Sex/Gender') +
theme_classic()
SA_data_q3 = read.csv('/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/tod-anatomical-scripts/q45/SA_SES.csv')
SA_data_q3$dxCoded <- as.factor(SA_data_q3$Dx) # 1 = ASD, 2 = TD
SA_data_q3$dxCoded <-unclass(SA_data_q3$dxCoded)
SA_data_q3$sexCoded <- as.factor(SA_data_q3$SEX) # 1 = Female, 2 = Male
SA_data_q3$sexCoded <-unclass(SA_data_q3$sexCoded)
SA_data_q4 = read.csv('/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/tod-anatomical-scripts/q45/SA_SES_q45.csv')
SA_data_q4$dxCoded <- as.factor(SA_data_q4$Dx) # 1 = ASD, 2 = TD
SA_data_q4$dxCoded <-unclass(SA_data_q4$dxCoded)
SA_data_q4$sexCoded <- as.factor(SA_data_q4$SEX) # 1 = Female, 2 = Male
SA_data_q4$sexCoded <-unclass(SA_data_q4$sexCoded)
names(SA_data_q3)
SES_Lang_area <- rcorr(as.matrix(SA_data_q4[,c("dxCoded","V1.Age", "sexCoded", "MEL_cat", "INR", "SES1", "zipIncome","lh_transversetemporal_area", "rh_transversetemporal_area", "lh_superiortemporal_area", "rh_superiortemporal_area", "lh_middletemporal_area", "rh_middletemporal_area", "lh_parsopercularis_area", "rh_parsopercularis_area", "lh_parsorbitalis_area", "rh_parsorbitalis_area", "lh_parstriangularis_area", "rh_parstriangularis_area", "TBV")], use="pairwise.complete.obs"))
#mypath <- file.path("/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/corrPlots/SA", "SES_area_varsCorr_q45.tiff")
#tiff(file=mypath,width = 10, height = 10, units = 'in', res = 300)
corrplot(SES_Lang_area$r, method = "color",  type = "lower", outline = T, addgrid.col = "darkgray", order="original",
cl.pos = "b", tl.col = "indianred4", tl.srt = 45,
p.mat = SES_Lang_area$P, sig.level = 0.05, insig = "blank",
tl.cex = .75, cl.cex = .75, addCoef.col = "white", number.digits = 2, number.cex = 0.5,
col = colorRampPalette(c("midnightblue","white","darkred"))(100))
#dev.off()
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- SA_data_q4[,c(18:32)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q4$INR + SA_data_q4$V1.Age +SA_data_q4$sexCoded)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q4$INR + SA_data_q4$V1.Age +SA_data_q4$sexCoded) +SA_data_q4$TBV)
q
q
q
q
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- SA_data_q4[,c(18:32)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q4$INR + SA_data_q4$V1.Age +SA_data_q4$sexCoded +SA_data_q4$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
outcomeVars
names(SA_data_q4)
outcomeVars[[13]]
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q4$INR + SA_data_q4$V1.Age +SA_data_q4$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q4$INR +SA_data_q4$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
rm(outcomes)
set.seed(1)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- CT_data_q3[,c(18:32)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ CT_data_q3$INR + CT_data_q3$sexCoded +CT_data_q3$V1.Age +SA_data_q3$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
rm(outcomes)
set.seed(1)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- SA_data_q3[,c(18:31)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q3$INR + SA_data_q3$sexCoded +SA_data_q3$V1.Age +SA_data_q3$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
outcomes
outcomeVars
outcomes <- SA_data_q3[,c(18:31)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q3$INR + SA_data_q3$sexCoded +SA_data_q3$V1.Age +SA_data_q3$TBV))
q
q
q
q
q
q
n <- 14
outcomes <- SA_data_q3[,c(18:31)]
outcomeVars = names(outcomes)
outcomeVars
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q3$INR + SA_data_q3$sexCoded +SA_data_q3$V1.Age +SA_data_q3$TBV))
summaries <- lapply(my_lms, summary)
summaries
outcomeVars[[13]]
library(float)
library(tidyverse)
library(knitr)
library(ggplot2)
library(knitr)
library(MBESS)
library(dplyr)
library(ppcor)
library(corrplot)
library(Hmisc)
library(dplyr)
library(kableExtra)
library(pander)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(tableone)
library(dplyr)
library(tableone)
library(pander)
library(furniture)
library(knitr)
options(digits = 4, scipen = 999)
knitr::opts_chunk$set(warning=FALSE, message=FALSE, error = FALSE)
rm(outcomes)
outcomes <- SA_data_q4[,c(18:32)]
outcomeVars = names(outcomes)
cat("\n")
cat("\n")
cat("\n")
cat("\n")
lm2 <- lm(rh_parsorbitalis_SA ~  INR + TBV + V1.Age + sexCoded, data=SA_data_q4, na.action = na.exclude)
rm(outcomes)
outcomes <- SA_data_q4[,c(18:32)]
outcomeVars = names(outcomes)
cat("\n")
cat("\n")
cat("\n")
cat("\n")
lm2 <- lm(rh_parsorbitalis_area ~  INR + TBV + V1.Age + sexCoded, data=SA_data_q4, na.action = na.exclude)
cat(tab_model(lm2, pred.labels = c("Intercept", "INR", "TBV", "Age", "Sex"),
dv.labels = paste(outcomeVars[[14]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
cat("\n")
ggplot(SA_data_q4, aes(x=INR, y=rh_parsorbitalis_area, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('RH Pars Orbitalis SA') +
xlab('Income:Needs Ratio') +
theme_classic()
outcomeVars[[13]]
summaries[[13]]
rm(lm2)
lm2 <- lm(rh_parsorbitalis_area ~  INR + TBV + dxCoded +INR*dxCoded, data=SA_data_q4, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(rh_parsorbitalis_area ~  INR + TBV + dxCoded, data=SA_data_q4, na.action = na.exclude)
summary(lm2)
rm(outcomes)
outcomes <- SA_data_q3[,c(18:32)]
outcomeVars = names(outcomes)
cat("\n")
cat("\n")
cat("\n")
cat("\n")
rm(lm2)
lm2 <- lm(rh_parsorbitalis_area ~  INR + TBV + V1.Age + sexCoded, data=SA_data_q4, na.action = na.exclude)
summary(lm2)
summaries[[13]]
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q4$SES1 + SA_data_q4$V1.Age +SA_data_q4$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- SA_data_q4[,c(18:31)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q4$SES1 + SA_data_q4$V1.Age +SA_data_q4$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
rm(summaries)
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 14
outcomes <- SA_data_q4[,c(18:31)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q4$SES1 + SA_data_q4$V1.Age + SA_data_q4$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
outcomeVars[[13]]
outcomeVars[[14]]
outcomeVars[[7]]
outcomeVars[[5]]
outcomeVars[[4]]
```{r, regTables SES1 Q3 SA, echo = FALSE, include=FALSE, eval = FALSE, results= 'asis'}
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 14
outcomes <- SA_data_q3[,c(18:31)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q3$SES1 + SA_data_q3$V1.Age + SA_data_q3$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
# ...coefficents with p values:
#sapply(summaries, function(x) x$coefficients[, c(1,4)], simplify = FALSE, USE.NAMES = TRUE)
# ...or r-squared values
#sapply(summaries, function(x) c(r_sq = x$r.squared, adj_r_sq = x$adj.r.squared))
for (i in seq_along(outcomeVars)) {
# cat('Linear regression results predicting', outcomeVars[[i]], '\n')
cat(tab_model(my_lms[i], pred.labels = c("Intercept", "Income:Needs", "TBV", "Sex"),
dv.labels = paste(outcomeVars[[i]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
}
```
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 14
outcomes <- SA_data_q3[,c(18:31)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q3$SES1 + SA_data_q3$V1.Age + SA_data_q3$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
outcomeVars
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 14
outcomes <- SA_data_q4[,c(18:31)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q4$MEL_cat + SA_data_q4$V1.Age + SA_data_q4$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 14
outcomes <- SA_data_q3[,c(18:31)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q3$MEL_cat + SA_data_q3$V1.Age + SA_data_q3$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 14
outcomes <- SA_data_q4[,c(18:31)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q4$zipIncome + SA_data_q4$V1.Age + SA_data_q4$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
outcomeVars
set.seed(1)
rm(outcomes)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 14
outcomes <- SA_data_q3[,c(18:31)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## MEL Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ SA_data_q3$zipIncome + SA_data_q3$V1.Age + SA_data_q3$TBV)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
outcomeVars
rm(outcomes)
outcomes <- CT_data_q3[,c(18:32)]
outcomeVars = names(outcomes)
cat("\n")
cat("\n")
cat("\n")
cat("\n")
lm2 <- lm(rh_parstriangularis_CT ~  SES1 + TBV + V1.Age + sexCoded, data=CT_data_q3, na.action = na.exclude)
summary(lm2)
rm(outcomes)
set.seed(1)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 15
outcomes <- CT_data_q3[,c(18:32)]
outcomeVars = names(outcomes)
#coVars <- CT_data_q4[,c(4:6, 36)]
#sesVars <- CT_data_q4[,c(37:39, 41:42)]
## SES1 Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ CT_data_q3$SES1 + CT_data_q3$sexCoded +CT_data_q3$V1.Age) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
rm(outcomes)
set.seed(1)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 14
outcomes <- CT_data_q3[,c(18:31)]
outcomeVars = names(outcomes)
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ CT_data_q3$SES1 + CT_data_q3$sexCoded +CT_data_q3$V1.Age)
q
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ CT_data_q3$SES1 + CT_data_q3$sexCoded +CT_data_q3$V1.Age))
summaries <- lapply(my_lms, summary)
summaries
outcomeVars
summaries[[4]]
summaries[[9]]
