FC_data$sexCoded <-unclass(FC_data$sexCoded)
FC_data$BilingualCoded <- as.factor(FC_data$Bilingual_Coded) # 0 = monolingual, 1 = bilingual
names(FC_data)
FC_data = read.csv('/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/tod-anatomical-scripts/q45/FC_Data/FC_zScoresPerParticipant.csv')
FC_data$dxCoded <- as.factor(FC_data$Dx) # 1 = ASD, 2 = TD
FC_data$dxCoded <-unclass(FC_data$dxCoded)
FC_data$sexCoded <- as.factor(FC_data$sex) # 1 = Female, 2 = Male
FC_data$sexCoded <-unclass(FC_data$sexCoded)
FC_data$BilingualCoded <- as.factor(FC_data$Bilingual_Coded) # 0 = monolingual, 1 = bilingual
names(FC_data)
SES_FC <- rcorr(as.matrix(FC_data[,c("dxCoded","Age", "sexCoded", "MEL_cat", "INR", "SES1", "GM_T", "VR_T", "FM_T", "RecLang_T", "L.STG.R.STG", "L.STG.L.IFG", "L.STG.R.IFG", "L.STG.L.MTG", "L.STG.R.MTG", "L.STG.L.pSTS", "L.STG.R.pSTS", "R.STG.L.IFG", "R.STG.R.IFG", "R.STG.L.MTG", "R.STG.R.MTG", "R.STG.L.pSTS", "R.STG.R.pSTS", "L.IFG.R.IFG", "L.IFG.L.MTG", "L.IFG.R.MTG", "L.IFG.L.pSTS", "L.IFG.R.pSTS", "R.IFG.L.MTG", "R.IFG.R.MTG", "R.IFG.L.pSTS", "R.IFG.R.pSTS", "L.MTG.R.MTG", "L.MTG.L.pSTS", "L.MTG.R.pSTS", "R.MTG.L.pSTS", "R.MTG.R.pSTS", "L.pSTS.R.pSTS", "RMSD")], use="pairwise.complete.obs"))
mypath <- file.path("/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/tod-anatomical-scripts/q45/FC_Data/CorrPlots/", "FC_varsCorr.tiff")
tiff(file=mypath,width = 10, height = 10, units = 'in', res = 300)
corrplot(SES_FC$r, method = "color",  type = "lower", outline = T, addgrid.col = "darkgray", order="original",
cl.pos = "b", tl.col = "indianred4", tl.srt = 45,
p.mat = SES_FC$P, sig.level = 0.05, insig = "blank",
tl.cex = .75, cl.cex = .75, addCoef.col = "white", number.digits = 2, number.cex = 0.5,
col = colorRampPalette(c("midnightblue","white","darkred"))(100))
dev.off()
FC_data = read.csv('/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/tod-anatomical-scripts/q45/FC_Data/FC_zScoresPerParticipant.csv')
FC_data$dxCoded <- as.factor(FC_data$Dx) # 1 = ASD, 2 = TD
FC_data$dxCoded <-unclass(FC_data$dxCoded)
FC_data$sexCoded <- as.factor(FC_data$sex) # 1 = Female, 2 = Male
FC_data$sexCoded <-unclass(FC_data$sexCoded)
FC_data$Bilingual_Coded
FC_data$BilingualCoded <- as.factor(FC_data$Bilingual_Coded) # 0 = monolingual, 1 = bilingual
FC_data$dxCoded
head(FC_data)
names(FC_data)
FC_data_ASD <- subset(FC_data, FC_data$Dx == "ASD")
SES_FC_ASD <- rcorr(as.matrix(FC_data[,c("dxCoded","Age", "sexCoded", "MEL_cat", "INR", "SES1", "GM_T", "VR_T", "FM_T", "RecLang_T", "ADOS.Total", "L.STG.R.STG", "L.STG.L.IFG", "L.STG.R.IFG", "L.STG.L.MTG", "L.STG.R.MTG", "L.STG.L.pSTS", "L.STG.R.pSTS", "R.STG.L.IFG", "R.STG.R.IFG", "R.STG.L.MTG", "R.STG.R.MTG", "R.STG.L.pSTS", "R.STG.R.pSTS", "L.IFG.R.IFG", "L.IFG.L.MTG", "L.IFG.R.MTG", "L.IFG.L.pSTS", "L.IFG.R.pSTS", "R.IFG.L.MTG", "R.IFG.R.MTG", "R.IFG.L.pSTS", "R.IFG.R.pSTS", "L.MTG.R.MTG", "L.MTG.L.pSTS", "L.MTG.R.pSTS", "R.MTG.L.pSTS", "R.MTG.R.pSTS", "L.pSTS.R.pSTS", "RMSD")], use="pairwise.complete.obs"))
mypath <- file.path("/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/tod-anatomical-scripts/q45/FC_Data/CorrPlots/", "FC_varsCorr_ASD.tiff")
tiff(file=mypath,width = 10, height = 10, units = 'in', res = 300)
corrplot(SES_FC_ASD$r, method = "color",  type = "lower", outline = T, addgrid.col = "darkgray", order="original",
cl.pos = "b", tl.col = "indianred4", tl.srt = 45,
p.mat = SES_FC_ASD$P, sig.level = 0.05, insig = "blank",
tl.cex = .75, cl.cex = .75, addCoef.col = "white", number.digits = 2, number.cex = 0.5,
col = colorRampPalette(c("midnightblue","white","darkred"))(100))
dev.off()
FC_data_ASD <- subset(FC_data, FC_data$Dx == "ASD")
SES_FC_ASD <- rcorr(as.matrix(FC_data[,c("Age", "sexCoded", "MEL_cat", "INR", "SES1", "GM_T", "VR_T", "FM_T", "RecLang_T", "ADOS.Total", "L.STG.R.STG", "L.STG.L.IFG", "L.STG.R.IFG", "L.STG.L.MTG", "L.STG.R.MTG", "L.STG.L.pSTS", "L.STG.R.pSTS", "R.STG.L.IFG", "R.STG.R.IFG", "R.STG.L.MTG", "R.STG.R.MTG", "R.STG.L.pSTS", "R.STG.R.pSTS", "L.IFG.R.IFG", "L.IFG.L.MTG", "L.IFG.R.MTG", "L.IFG.L.pSTS", "L.IFG.R.pSTS", "R.IFG.L.MTG", "R.IFG.R.MTG", "R.IFG.L.pSTS", "R.IFG.R.pSTS", "L.MTG.R.MTG", "L.MTG.L.pSTS", "L.MTG.R.pSTS", "R.MTG.L.pSTS", "R.MTG.R.pSTS", "L.pSTS.R.pSTS", "RMSD")], use="pairwise.complete.obs"))
mypath <- file.path("/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/tod-anatomical-scripts/q45/FC_Data/CorrPlots/", "FC_varsCorr_ASD.tiff")
tiff(file=mypath,width = 10, height = 10, units = 'in', res = 300)
corrplot(SES_FC_ASD$r, method = "color",  type = "lower", outline = T, addgrid.col = "darkgray", order="original",
cl.pos = "b", tl.col = "indianred4", tl.srt = 45,
p.mat = SES_FC_ASD$P, sig.level = 0.05, insig = "blank",
tl.cex = .75, cl.cex = .75, addCoef.col = "white", number.digits = 2, number.cex = 0.5,
col = colorRampPalette(c("midnightblue","white","darkred"))(100))
dev.off()
FC_data_ASD <- subset(FC_data, FC_data$Dx == "ASD")
SES_FC_ASD <- rcorr(as.matrix(FC_data_ASD[,c("Age", "sexCoded", "MEL_cat", "INR", "SES1", "GM_T", "VR_T", "FM_T", "RecLang_T", "ADOS.Total", "L.STG.R.STG", "L.STG.L.IFG", "L.STG.R.IFG", "L.STG.L.MTG", "L.STG.R.MTG", "L.STG.L.pSTS", "L.STG.R.pSTS", "R.STG.L.IFG", "R.STG.R.IFG", "R.STG.L.MTG", "R.STG.R.MTG", "R.STG.L.pSTS", "R.STG.R.pSTS", "L.IFG.R.IFG", "L.IFG.L.MTG", "L.IFG.R.MTG", "L.IFG.L.pSTS", "L.IFG.R.pSTS", "R.IFG.L.MTG", "R.IFG.R.MTG", "R.IFG.L.pSTS", "R.IFG.R.pSTS", "L.MTG.R.MTG", "L.MTG.L.pSTS", "L.MTG.R.pSTS", "R.MTG.L.pSTS", "R.MTG.R.pSTS", "L.pSTS.R.pSTS", "RMSD")], use="pairwise.complete.obs"))
mypath <- file.path("/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/tod-anatomical-scripts/q45/FC_Data/CorrPlots/", "FC_varsCorr_ASD.tiff")
tiff(file=mypath,width = 10, height = 10, units = 'in', res = 300)
corrplot(SES_FC_ASD$r, method = "color",  type = "lower", outline = T, addgrid.col = "darkgray", order="original",
cl.pos = "b", tl.col = "indianred4", tl.srt = 45,
p.mat = SES_FC_ASD$P, sig.level = 0.05, insig = "blank",
tl.cex = .75, cl.cex = .75, addCoef.col = "white", number.digits = 2, number.cex = 0.5,
col = colorRampPalette(c("midnightblue","white","darkred"))(100))
dev.off()
FC_data_TD <- subset(FC_data, FC_data$Dx == "TD")
SES_FC_TD <- rcorr(as.matrix(FC_data_TD[,c("Age", "sexCoded", "MEL_cat", "INR", "SES1", "GM_T", "VR_T", "FM_T", "RecLang_T", "L.STG.R.STG", "L.STG.L.IFG", "L.STG.R.IFG", "L.STG.L.MTG", "L.STG.R.MTG", "L.STG.L.pSTS", "L.STG.R.pSTS", "R.STG.L.IFG", "R.STG.R.IFG", "R.STG.L.MTG", "R.STG.R.MTG", "R.STG.L.pSTS", "R.STG.R.pSTS", "L.IFG.R.IFG", "L.IFG.L.MTG", "L.IFG.R.MTG", "L.IFG.L.pSTS", "L.IFG.R.pSTS", "R.IFG.L.MTG", "R.IFG.R.MTG", "R.IFG.L.pSTS", "R.IFG.R.pSTS", "L.MTG.R.MTG", "L.MTG.L.pSTS", "L.MTG.R.pSTS", "R.MTG.L.pSTS", "R.MTG.R.pSTS", "L.pSTS.R.pSTS", "RMSD")], use="pairwise.complete.obs"))
mypath <- file.path("/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/tod-anatomical-scripts/q45/FC_Data/CorrPlots/", "FC_varsCorr_TD.tiff")
tiff(file=mypath,width = 10, height = 10, units = 'in', res = 300)
corrplot(SES_FC_TD$r, method = "color",  type = "lower", outline = T, addgrid.col = "darkgray", order="original",
cl.pos = "b", tl.col = "indianred4", tl.srt = 45,
p.mat = SES_FC_TD$P, sig.level = 0.05, insig = "blank",
tl.cex = .75, cl.cex = .75, addCoef.col = "white", number.digits = 2, number.cex = 0.5,
col = colorRampPalette(c("midnightblue","white","darkred"))(100))
dev.off()
names(FC_data)
rm(outcomes)
outcomes <- FC_data[,c(4:31)]
outcomes
outcomeVars = names(outcomes)
outcomeVars
set.seed(1)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 28
rm(outcomes)
outcomes <- FC_data[,c(4:31)]
outcomeVars = names(outcomes)
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ FC_data$INR + FC_data$RMSD + FC_data$dxCoded + FC_data$BilingualCoded)) # change the predictors manually
# if you need more info, get full summary call. now you can get whatever, like:
summaries <- lapply(my_lms, summary)
summaries
outcomeVars[[21]]
outcomeVars[[16]] # Remove RMSD
outcomeVars[[5]]
outcomeVars[[2]] # Dx Predicts
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ FC_data$INR + FC_data$sexCoded + FC_data$dxCoded + FC_data$BilingualCoded)) # change the predictors manually
summaries <- lapply(my_lms, summary)
summaries[[21]]
summaries[[16]]
summaries[[5]]
summaries[[2]]
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ FC_data$INR + FC_data$dxCoded + FC_data$BilingualCoded)) # change the predictors manually
summaries <- lapply(my_lms, summary)
outcomeVars[[21]]
summaries[[21]]
summaries[[16]]
summaries[[2]]
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ FC_data$INR+ FC_data$BilingualCoded)) # change the predictors manually
summaries <- lapply(my_lms, summary)
summaries[[21]]
summaries[[16]]
outcomeVars[[21]]
rm(lm2)
lm2 <- lm(R.IFG.L.pSTSi ~  INR + dxCoded + Age + BilingualCoded, data=FC_data, na.action = na.exclude)
names(FC_data)
rm(lm2)
lm2 <- lm(L.IFG.R.pSTS ~  INR + dxCoded + Age + BilingualCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(L.IFG.R.pSTS ~  INR + dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
outcomeVars[[21]]
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  INR + dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  INR + sexCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  INR + sexCoded + BilingualCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  INR + sexCoded + dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
ggplot(FC_data, aes(x=INR, y=R.IFG.L.pSTS, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('R-IFG L-pSES FC (z-scores)') +
xlab('Income:Needs Ratio') +
theme_classic()
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  INR + sexCoded + dxCoded +dxCoded*INR, data=FC_data, na.action = na.exclude)
summary(lm2)
ggplot(FC_data, aes(x=INR, y=R.IFG.L.pSTS, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('R-IFG L-pSTS FC (z-scores)') +
xlab('Income:Needs Ratio') +
theme_classic()
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ FC_data$SES1 + FC_data$RMSD + FC_data$dxCoded+ FC_data$Age+  FC_data$BilingualCoded)) # change the predictors manually
summaries <- lapply(my_lms, summary)
summaries
outcomeVars[[28]] #SES1 predicts this (controlling for RMSD, dx, age, and bilingualism, although none are sig.)
outcomeVars[[26]] #SES1 predicts this (controlling for RMSD, dx, age, and bilingualism, of these, only dx is sig.)
outcomeVars[[21]] #SES1 predicts this (controlling for RMSD, dx, age, and bilingualism, although none are sig.)
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  INR + SES1+ sexCoded + dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  INR + SES1+ sexCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  INR + SES1, data=FC_data, na.action = na.exclude)
summary(lm2)
ggplot(FC_data, aes(x=SES1, y=R.IFG.L.pSTS, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('R-IFG L-pSTS FC (z-scores)') +
xlab('Income:Needs Ratio') +
theme_classic()
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  SES1 + sexCoded + dxCoded +SES1*dxCoded, data=FC_data, na.action = na.exclude)  # INR not significant when controlling for SES1
summary(lm2)
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  SES1+ dxCoded +SES1*dxCoded, data=FC_data, na.action = na.exclude)  # INR not significant when controlling for SES1
summary(lm2)
n <- 28
rm(outcomes)
outcomes <- FC_data[,c(4:31)]
outcomeVars = names(outcomes)
## INR Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ FC_data$SES1 + FC_data$RMSD + FC_data$dxCoded+ FC_data$Age+  FC_data$BilingualCoded)) # change the predictors manually
summaries <- lapply(my_lms, summary)
summaries
outcomeVars[[15]]
outcomeVars[[14]]
outcomeVars[[13]]
outcomeVars[[12]]
outcomeVars[[8]]
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ FC_data$SES1 + FC_data$RMSD +  FC_data$BilingualCoded)) # change the predictors manually
summaries <- lapply(my_lms, summary)
summaries[[15]]
summaries[[14]]
summaries[[13]]
summaries[[12]]
n <- 28
rm(outcomes)
outcomes <- FC_data[,c(4:31)]
outcomeVars = names(outcomes)
## INR Models
# run n regressions
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ FC_data$MEL_cat + FC_data$RMSD +  FC_data$BilingualCoded)) # change the predictors manually
summaries <- lapply(my_lms, summary)
summaries
my_lms <- lapply(1:n, function(x) lm(outcomes[,x] ~ FC_data$MEL_cat + FC_data$RMSD)) # change the predictors manually
summaries <- lapply(my_lms, summary)
summaries
library(float)
library(tidyverse)
library(knitr)
library(ggplot2)
library(knitr)
library(MBESS)
library(dplyr)
library(ppcor)
library(corrplot)
library(Hmisc)
library(dplyr)
library(kableExtra)
library(pander)
library(sjPlot)
library(sjmisc)
library(sjlabelled)
library(tableone)
library(dplyr)
library(tableone)
library(pander)
library(furniture)
library(knitr)
options(digits = 4, scipen = 999)
knitr::opts_chunk$set(warning=FALSE, message=FALSE, error = FALSE)
set.seed(1)
# number of columns in the Lung and Blood data.frames. 22,000 for you?
n <- 28
rm(outcomes)
outcomes <- FC_data[,c(4:31)]
outcomeVars = names(outcomes)
rm(lm2)
lm2 <- lm(L.pSTS.R.pSTS ~  SES1 + RMSD + BilingualCoded + dxCoded, data=FC_data, na.action = na.exclude)
cat(tab_model(lm2, pred.labels = c("Intercept", "SES1", "RMSD", "Bilingualism", "Dx"),
dv.labels = paste(outcomeVars[[28]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
ggplot(FC_data, aes(x=SES1, y=L.pSTS.R.pSTS, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('L-pSTS, R-pSTS, FC (z-scores)') +
xlab('Neighborhood Advantage') +
theme_classic()
rm(lm2)
lm2 <- lm(R.MTG.L.pSTS ~  SES1 + RMSD + BilingualCoded + dxCoded, data=FC_data, na.action = na.exclude)
cat(tab_model(lm2, pred.labels = c("Intercept", "SES1", "RMSD", "Bilingualism", "Dx"),
dv.labels = paste(outcomeVars[[26]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
ggplot(FC_data, aes(x=SES1, y=R.MTG.L.pSTS, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('R-MTG, L-pSTS, FC (z-scores)') +
xlab('Neighborhood Advantage') +
theme_classic()
rm(lm2)
lm2 <- lm(R.IFG.L.pSTS ~  SES1+ dxCoded + BilingualCoded, data=FC_data, na.action = na.exclude)  # INR not significant when controlling for SES1
cat(tab_model(lm2, pred.labels = c("Intercept", "SES1", "Dx", "Bilingualism"),
dv.labels = paste(outcomeVars[[21]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
ggplot(FC_data, aes(x=SES1, y=R.IFG.L.pSTS, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('R-IFG L-pSTS FC (z-scores)') +
xlab('Neighborhood Advantage') +
theme_classic()
rm(lm2)
lm2 <- lm(L.IFG.R.IFG ~  SES1+ dxCoded + BilingualCoded, data=FC_data, na.action = na.exclude)
cat(tab_model(lm2, pred.labels = c("Intercept", "SES1", "Dx", "Bilingualism"),
dv.labels = paste(outcomeVars[[14]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
ggplot(FC_data, aes(x=SES1, y=L.IFG.R.IFG, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('L-IFG R-IFG FC (z-scores)') +
xlab('Neighborhood Advantage') +
theme_classic()
rm(lm2)
lm2 <- lm(R.STG.R.pSTS ~  SES1+ dxCoded + BilingualCoded, data=FC_data, na.action = na.exclude)
cat(tab_model(lm2, pred.labels = c("Intercept", "SES1", "Dx", "Bilingualism"),
dv.labels = paste(outcomeVars[[13]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
ggplot(FC_data, aes(x=SES1, y=R.STG.R.pSTS, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('R-STG R-pSTS FC (z-scores)') +
xlab('Neighborhood Advantage') +
theme_classic()
rm(lm2)
lm2 <- lm(R.STG.L.pSTS ~  SES1+ dxCoded + BilingualCoded, data=FC_data, na.action = na.exclude)
cat(tab_model(lm2, pred.labels = c("Intercept", "SES1", "Dx", "Bilingualism"),
dv.labels = paste(outcomeVars[[12]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
ggplot(FC_data, aes(x=SES1, y=R.STG.L.pSTS, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('R-STG.L-pSTS FC (z-scores)') +
xlab('Neighborhood Advantage') +
theme_classic()
rm(lm2)
lm2 <- lm(R.STG.L.IFG ~  SES1+ dxCoded + BilingualCoded, data=FC_data, na.action = na.exclude)
cat(tab_model(lm2, pred.labels = c("Intercept", "SES1", "Dx", "Bilingualism"),
dv.labels = paste(outcomeVars[[8]]),
string.pred = "Coeffcient",
string.ci = "CI (95%)",
string.p = "p-Value")$knitr,"\n--------\n")
ggplot(FC_data, aes(x=SES1, y=R.STG.L.IFG, color=Dx, shape=Dx)) +
geom_point() +
geom_smooth(method=lm, aes(fill=Dx)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('R-STG L-IFG FC (z-scores)') +
xlab('Neighborhood Advantage') +
theme_classic()
rm(lm2)
lm2 <- lm(R.STG.R.pSTS ~  SES1+ dxCoded + BilingualCoded + SES1*dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(R.STG.R.pSTS ~  SES1+ dxCoded + SES1*dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(R.MTG.L.pSTS ~  SES1 + RMSD + BilingualCoded + dxCoded + SES1*dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(R.MTG.L.pSTS ~  SES1 + RMSD + BilingualCoded + dxCoded + SES1*dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(R.MTG.L.pSTS ~  SES1 + RMSD + dxCoded + SES1*dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
rm(lm2)
lm2 <- lm(R.MTG.L.pSTS ~  SES1 + dxCoded + SES1*dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
outcomeVars[[15]]
outcomeVars
names(FC_data)
rm(lm2)
lm2 <- lm(L.IFG.L.MTG ~  BilingualCoded + Age + dxCoded + Age*dxCoded, data=FC_data, na.action = na.exclude)
summary(lm2)
ggplot(FC_data, aes(x=BilingualCoded, y=L.IFG.L.MTG, color=BilingualCoded)) +
geom_boxplot() +
theme(text = element_text(size = 20)) +
scale_color_manual(values=c("red","blue")) +
scale_fill_manual(values=c("red","blue")) +
ylab('L-IFG L-MTG, FC (z-scores)') +
xlab('Bilingualism') +
theme_classic()
ggplot(FC_data, aes(group=BilingualCoded, y=L.IFG.L.MTG, color=BilingualCoded)) +
geom_boxplot() +
theme(text = element_text(size = 20)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_color_manual(values=c("green","blue")) +
scale_fill_manual(values=c("green","blue")) +
ylab('L-IFG L-MTG, FC (z-scores)') +
xlab('Bilingualism') +
theme_classic()
ggplot(na.omit(FC_data), aes(group=BilingualCoded, y=L.IFG.L.MTG, color=BilingualCoded)) +
geom_boxplot() +
theme(text = element_text(size = 20)) +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) +
scale_color_manual(values=c("green","blue")) +
scale_fill_manual(values=c("green","blue")) +
ylab('L-IFG L-MTG, FC (z-scores)') +
xlab('Bilingualism') +
theme_classic()
rm(table_one_matrix)
tableDataQ3 = FC_data[,c('Dx', 'sex', 'Age', 'MEL_cat', 'INR', 'SES1', 'ExpLang_T', 'RecLang_T', 'ELC_SS', 'RMSD', 'BilingualCoded')]
listVars <- c("sex", "BilingualCoded" "V1.Age", "MEL_cat", "INR", "SES1", "ExpLang_T", "RecLang_T", "ELC_SS", "RMSD")
catVars <- c("Dx")
table1 <- CreateTableOne(vars = listVars, data = FC_data, factorVars = catVars, strata = c("Dx"))
table_one_matrix <- print(table1,
includeNA = FALSE,
showAllLevels = TRUE
)
pandoc_table <- pandoc.table(table_one_matrix,
split.table = Inf,
style = "rmarkdown",
caption = "Participant Summary Table for FC Data")
pandoc_table <- pandoc.table(table_one_matrix,
split.table = Inf,
style = "rmarkdown",
caption = "Participant Summary Table for FC Data")
# Create a table of some chicken weight summary statistics using dplyr
#library(compareGroups)
rm(table_one_matrix)
tableDataQ3 = FC_data[,c('Dx', 'sex', 'Age', 'MEL_cat', 'INR', 'SES1', 'ExpLang_T', 'RecLang_T', 'ELC_SS', 'RMSD', 'BilingualCoded')]
listVars <- c("sex", "BilingualCoded", "V1.Age", "MEL_cat", "INR", "SES1", "ExpLang_T", "RecLang_T", "ELC_SS", "RMSD")
catVars <- c("Dx")
table1 <- CreateTableOne(vars = listVars, data = FC_data, factorVars = catVars, strata = c("Dx"))
table_one_matrix <- print(table1,
includeNA = FALSE,
showAllLevels = TRUE
)
pandoc_table <- pandoc.table(table_one_matrix,
split.table = Inf,
style = "rmarkdown",
caption = "Participant Summary Table for FC Data")
# Create a table of some chicken weight summary statistics using dplyr
#library(compareGroups)
rm(table_one_matrix)
tableDataQ3 = LGI_data_q3[,c('Dx', 'SEX', 'V1.Age', 'MEL_cat', 'INR', 'zipIncome', 'SES1', 'ExpLang_T', 'RecLang_T', 'ELC_SS', 'TBV', 'BilingualCoded')]
listVars <- c("SEX", "BilingualCoded", "V1.Age", "MEL_cat", "INR", "zipIncome", "SES1", "ExpLang_T", "RecLang_T", "ELC_SS", "TBV")
catVars <- c("Dx")
table1 <- CreateTableOne(vars = listVars, data = LGI_data_q3, factorVars = catVars, strata = c("Dx"))
table_one_matrix <- print(table1,
includeNA = FALSE,
showAllLevels = TRUE
)
pandoc_table <- pandoc.table(table_one_matrix,
split.table = Inf,
style = "rmarkdown",
caption = "Participant Summary Table for Anatomical Analyses")
names(LGI_data_q3)
rm(table_one_matrix)
tableDataQ3 = CT_data_q3[,c('Dx', 'SEX', 'V1.Age', 'MEL_cat', 'INR', 'zipIncome', 'SES1', 'ExpLang_T', 'RecLang_T', 'ELC_SS', 'TBV', 'BilingualCoded')]
names(CT_data_q3)
rm(table_one_matrix)
tableDataQ3 = CT_data_q3[,c('Dx', 'SEX', 'V1.Age', 'MEL_cat', 'INR', 'SES1', 'Expressive.Language.T.score', 'Receptive.Language.T.score', 'Early.Learning.Composite.Standard.Score', 'TBV', 'BilingualCoded')]
listVars <- c("SEX", "BilingualCoded", "V1.Age", "MEL_cat", "INR", "SES1", "Expressive.Language.T.score", "Receptive.Language.T.score", "Early.Learning.Composite.Standard.Score", "TBV")
catVars <- c("Dx")
table1 <- CreateTableOne(vars = listVars, data = LGI_data_q3, factorVars = catVars, strata = c("Dx"))
table_one_matrix <- print(table1,
includeNA = FALSE,
showAllLevels = TRUE
)
pandoc_table <- pandoc.table(table_one_matrix,
split.table = Inf,
style = "rmarkdown",
caption = "Participant Summary Table for Anatomical Analyses")
rm(table_one_matrix)
tableDataQ3 = CT_data_q3[,c('Dx', 'SEX', 'V1.Age', 'MEL_cat', 'INR', 'SES1', 'Expressive.Language.T.score', 'Receptive.Language.T.score', 'Early.Learning.Composite.Standard.Score', 'TBV', 'BilingualCoded')]
listVars <- c("SEX", "BilingualCoded", "V1.Age", "MEL_cat", "INR", "SES1", "Expressive.Language.T.score", "Receptive.Language.T.score", "Early.Learning.Composite.Standard.Score", "TBV")
catVars <- c("Dx")
table1 <- CreateTableOne(vars = listVars, data = LGI_data_q3, factorVars = catVars, strata = c("Dx"))
table_one_matrix <- print(table1,
includeNA = FALSE,
showAllLevels = TRUE
)
pandoc_table <- pandoc.table(table_one_matrix,
split.table = Inf,
style = "rmarkdown",
caption = "Participant Summary Table for Anatomical Analyses")
rm(table_one_matrix)
tableDataQ3 = CT_data_q3[,c('Dx', 'SEX', 'V1.Age', 'MEL_cat', 'INR', 'SES1', 'Expressive.Language.T.score', 'Receptive.Language.T.score', 'Early.Learning.Composite.Standard.Score', 'TBV', 'BilingualCoded')]
listVars <- c("SEX", "BilingualCoded", "V1.Age", "MEL_cat", "INR", "SES1", "Expressive.Language.T.score", "Receptive.Language.T.score", "Early.Learning.Composite.Standard.Score", "TBV")
catVars <- c("Dx")
table1 <- CreateTableOne(vars = listVars, data = LGI_data_q3, factorVars = catVars, strata = c("Dx"))
table_one_matrix <- print(table1,
includeNA = FALSE,
showAllLevels = TRUE
)
listVars
rm(table_one_matrix)
tableDataQ3 = CT_data_q3[,c('Dx', 'SEX', 'V1.Age', 'MEL_cat', 'INR', 'SES1', 'Expressive.Language.T.score', 'Receptive.Language.T.score', 'Early.Learning.Composite.Standard.Score', 'TBV', 'BilingualCoded')]
listVars <- c("SEX", "BilingualCoded", "V1.Age", "MEL_cat", "INR", "SES1", "Expressive.Language.T.score", "Receptive.Language.T.score", "Early.Learning.Composite.Standard.Score", "TBV")
catVars <- c("Dx")
table1 <- CreateTableOne(vars = listVars, data =  CT_data_q3, factorVars = catVars, strata = c("Dx"))
table_one_matrix <- print(table1,
includeNA = FALSE,
showAllLevels = TRUE
)
pandoc_table <- pandoc.table(table_one_matrix,
split.table = Inf,
style = "rmarkdown",
caption = "Participant Summary Table for Anatomical Analyses")
CT_data_q3 = read.csv('/Users/lolson/Documents/001_JDP/001_BDIL/006_Projects/11_ToddlerSES/todanatomicaldata/tod-anatomical-scripts/q45/Lang_CT_SES.csv')
CT_data_q3$dxCoded <- as.factor(CT_data_q3$Dx) # 1 = ASD, 2 = TD
CT_data_q3$dxCoded <-unclass(CT_data_q3$dxCoded)
CT_data_q3$sexCoded <- as.factor(CT_data_q3$SEX) # 1 = Female, 2 = Male
CT_data_q3$sexCoded <-unclass(CT_data_q3$sexCoded)
CT_data_q3$BilingualCoded <- as.factor(CT_data_q3$BilingualCoded)
rm(table_one_matrix)
tableDataQ3 = CT_data_q3[,c('Dx', 'SEX', 'V1.Age', 'MEL_cat', 'INR', 'SES1', 'ExpLang_T', 'RecLang_T', 'ELC_SS', 'TBV', 'BilingualCoded')]
listVars <- c("SEX", "BilingualCoded", "V1.Age", "MEL_cat", "INR", "SES1", "ExpLang_T", "RecLang_T", "ELC_SS", "TBV")
catVars <- c("Dx")
table1 <- CreateTableOne(vars = listVars, data =  CT_data_q3, factorVars = catVars, strata = c("Dx"))
table_one_matrix <- print(table1,
includeNA = FALSE,
showAllLevels = TRUE
)
